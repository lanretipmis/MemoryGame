!function(t){var e={};function a(i){if(e[i])return e[i].exports;var s=e[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,a),s.l=!0,s.exports}a.m=t,a.c=e,a.d=function(t,e,i){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},a.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(a.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)a.d(i,s,function(e){return t[e]}.bind(null,s));return i},a.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="",a(a.s=0)}([function(t,e,a){"use strict";a.r(e);const i=new class{constructor(){this.cardDeck=[{icon:'<i class="fas fa-frog fa-lg"></i>',faceUp:!1,matched:!1},{icon:'<i class="fas fa-frog fa-lg"></i>',faceUp:!1,matched:!1},{icon:'<i class="fas fa-atom fa-lg"></i>',faceUp:!1,matched:!1},{icon:'<i class="fas fa-atom fa-lg"></i>',faceUp:!1,matched:!1},{icon:'<i class="fas fa-bath fa-lg"></i>',faceUp:!1,matched:!1},{icon:'<i class="fas fa-bath fa-lg"></i>',faceUp:!1,matched:!1},{icon:'<i class="fas fa-bowling-ball fa-lg"></i>',faceUp:!1,matched:!1},{icon:'<i class="fas fa-bowling-ball fa-lg"></i>',faceUp:!1,matched:!1},{icon:'<i class="fas fa-brain fa-lg"></i>',faceUp:!1,matched:!1},{icon:'<i class="fas fa-brain fa-lg"></i>',faceUp:!1,matched:!1},{icon:'<i class="fab fa-forumbee fa-lg"></i>',faceUp:!1,matched:!1},{icon:'<i class="fab fa-forumbee fa-lg"></i>',faceUp:!1,matched:!1},{icon:'<i class="fas fa-gem fa-lg"></i>',faceUp:!1,matched:!1},{icon:'<i class="fas fa-gem fa-lg"></i>',faceUp:!1,matched:!1},{icon:'<i class="fas fa-guitar fa-lg"></i>',faceUp:!1,matched:!1},{icon:'<i class="fas fa-guitar fa-lg"></i>',faceUp:!1,matched:!1}]}shuffle(){let t=this.cardDeck;for(let e=t.length-1;e--;){let a=Math.floor(Math.random()*(e+1));[t[e],t[a]]=[t[a],t[e]]}return t}isIconMatched(t,e,a){return t[e].icon===t[a].icon}},s=new class{constructor(){this.gameTimer=null,this.gameTimerMin=0,this.gameTimerSec=0,this.secondsDom=0,this.minutesDom=0}showDeck(t){let e="";t.forEach((t,a)=>{e+=`<li class="card hide-card" id='${a}'>${t.icon}</li>`}),document.querySelector(".deck").innerHTML=e}faceUp(t){document.getElementById(`${t}`).lastChild.style.visibility="visible",document.getElementById(`${t}`).classList="card show-card"}faceDown(t){document.getElementById(`${t}`).classList="card hide-card hide-animation",document.getElementById(`${t}`).lastChild.style.visibility="hidden"}isCardMatched(t){return document.getElementById(`${t}`).getAttribute("class").includes("match")}updateMoveCount(t){document.querySelector(".moves").innerText=`Moves Counter: ${t}`}markMatched(t,e){document.getElementById(`${t}`).classList+=" match",document.getElementById(`${e}`).classList+=" match"}gameOverScreen(){document.getElementById(".main-container").classList+="gameover"}},c=new class{constructor(){this.deck=null,this.gameDeck=[],this.gameUI=null,this.moveCount=0,this.flipCount=0,this.matchCount=0,this.firstCard=void 0,this.secCard=void 0,this.deckFragment=null,this.isTurnInProgress=!1,this.wait=t=>new Promise((e,a)=>setTimeout(e,t))}setDeck(t){this.deck=t}setUI(t){this.gameUI=t}startGame(){this.moveCount=0,this.flipCount=0,this.matchCount=0,this.firstCard=void 0,this.gameDeck=this.deck,this.gameUI.showDeck(this.gameDeck),this.gameUI.updateMoveCount(this.moveCount)}isIconMatched(t,e,a){return t[e].icon===t[a].icon}turn(t){return null!=t&&(this.firstCard!=t&&(!this.gameUI.isCardMatched(t)&&(!(this.flipCount>1)&&(this.gameUI.faceUp(t),this.flipCount+=1,1===this.flipCount?this.firstCard=t:(this.moveCount+=1,this.gameUI.updateMoveCount(this.moveCount),this.isIconMatched(this.gameDeck,this.firstCard,t)?this.pairMatched(this.firstCard,t):this.pairNotMatched(this.firstCard,t)),this.matchCount>=8&&(this.gameUI.gameOverScreen(),this.gameUI.stopTimer(),!0)))))}pairMatched(t,e){this.gameUI.markMatched(this.firstCard,e),this.matchCount+=1,this.firstCard=void 0,this.flipCount=0}async pairNotMatched(t,e){await this.wait(1e3),this.gameUI.faceDown(t),this.gameUI.faceDown(e),this.firstCard=void 0,this.flipCount=0}};c.setDeck(i.shuffle()),c.setUI(s),c.startGame(),document.querySelector(".deck").addEventListener("click",(function(t){t.preventDefault(),c.turn(t.target.getAttribute("id"))})),document.querySelector(".restart").addEventListener("click",(function(t){t.preventDefault(),c.setDeck(i.shuffle()),c.setUI(s),c.startGame()}))}]);